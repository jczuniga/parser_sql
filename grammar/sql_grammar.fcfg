% start S

S[SEM=(?np2 + ?vp2)] -> NP[SEM=?np2] VP[SEM=?vp2]

VP[SEM=(?vp2 + BREAK_W + WHERE + ?pp)] -> City_v[SEM=?vp2] PP[SEM=?pp]
VP[SEM=?vp2] -> V[SEM=?vp2]  | City_v[SEM=?vp2] | Dep_v[SEM=?vp2] 
VP[SEM=(?v + ?vp)] -> V[SEM=?v] VP[SEM=?vp]
VP[SEM=(?v + BREAK_W + WHERE + ?n + ?vp)] -> Country_v[SEM=?v] N[SEM=?n] VP[SEM=?vp]
VP[SEM=(?v + BREAK_W + WHERE + ?n + ?vp)] -> City_v[SEM=?v] N[SEM=?n] VP[SEM=?vp]

# Last and first name handler
VP[SEM=(?v + BREAK_W + WHERE + ?la +?na1 + ?na2)] -> V[SEM=?v] last_a[SEM=?la] name_a[SEM=?na1] name_b[SEM=?na2]
VP[SEM=(?v +  BREAK_W + WHERE + ?la +?na1 + ?na2)] -> V[SEM=?v] first_a[SEM=?la] name_a[SEM=?na1] name_b[SEM=?na2]

VP[SEM=(?paid_v + ?v)] -> Paid_v[SEM=?paid_v] V[SEM=?v] 
VP[SEM=(?paid_v  + ?v1 +  BREAK_W + WHERE + ?n + ?v2)] -> Paid_v[SEM=?paid_v]  V[SEM=?v1] N[SEM=?n] V[SEM=?v2]

VP[SEM=(?iv + ?v)] -> IV[SEM=?iv] V[SEM=?v]

PP[SEM=(?n + ?v)] -> N[SEM=?n] V[SEM=?v]

# Handling Average
NP[SEM=(?det + ?avg)] -> Det[SEM=?det] AVG[SEM=?avg] | Det[SEM=?det] Max[SEM=?avg] | Det[SEM=?det] Min[SEM=?avg] | Det[SEM=?det] Con_t[SEM=?avg] 

NP[SEM=(?det)] -> Det_2[SEM=?det]

# SELECT Clause
Det[SEM='BREAK_S SELECT'] -> 'Which' | 'What' | 'How' | 'Who' | 'which' | 'what' | 'how' | 'who'
Det_2[SEM='BREAK_S SELECT *'] -> 'Which' | 'What' | 'How' | 'Who'| 'Who' | 'which' | 'what' | 'how' | 'who'

# Columns name clauses
V[SEM='BREAK_F FROM city'] ->  'city' | 'cities' | 'metro' | 'metropolitan areas' | 'town'
V[SEM='BREAK_F FROM country'] ->  'country' | 'countries' | 'nation' | 'nations'
V[SEM='BREAK_F FROM countrylanguage'] ->  'language' | 'languages' | 'speak'

# avg,min,max select variable
City_v[SEM='(name) BREAK_F FROM city'] -> 'name' | 'names'
Country_v[SEM='(name) BREAK_F FROM city'] -> 'country' | 'countries' | nation | nations

# Average , Min, Max, Count
AVG[SEM='AVG'] -> 'average' | 'avg'
Max[SEM='MAX'] -> 'maximum' | 'max' | 'highest'
Min[SEM='MIN'] -> 'minimum' | 'min' | 'lowest'
Con_t[SEM='COUNT'] -> 'many' | 'much'

# Helpers
last_a[SEM='last_name'] -> 'last'
name_a[SEM=''] -> 'name'
name_b[SEM='= "Guana"'] -> 'Guana'
name_b[SEM='= "Facello"'] -> 'Facello'
first_a[SEM='first_name'] -> 'first'



################################################################################################################
#	SQL Query Structures
################################################################################################################
## MySQL 
## Note: Nested Queries are not supported

# ------------ SQL operations supported
#   - SELECT
#   - FROM
#   - WHERE
#   - AVG
#   - ORDER BY ASC/DESC     (Skip)
#   - LIKE              (Skip)
#   - IN                (Skip)
#   - operations(> , < , = )    (Skip)
## Base Form
# SELECT (Columns names)* FROM (Table names)*

## WHERE Form
# SELECT (Columns names)* FROM (Table names)* [WHERE [Conditions] ]

## Average Form
# SELECT AVG( (Column name) )(Columns names)* FROM (Table names)*
# SELECT AVG( (Column name) )(Columns names)* FROM (Table names)* [WHERE [Conditions] ] ...


## GROUP By Forms
# SELECT (Columns names)* FROM (Table names)* [WHERE [Conditions] ] [GROUP BY (Colmns name)]
# SELECT (Columns names)* FROM (Table names)* [GROUP BY (Colmns name)]

## ORDER BY Forms
# SELECT (Columns names)* FROM (Table names)* [WHERE [Conditions] ] [ORDER BY (Colmns name) (ASC/DESC) limit (number)]
# SELECT (Columns names)* FROM (Table names)* [WHERE [Conditions] ] [GROUP BY (Colmns name)] [ORDER BY (Colmns name) (ASC/DESC) limit (number) ]

# SELECT (Columns names)* FROM (Table names)* [WHERE [Conditions] ] [GROUP BY (Colmns name)] [ORDER BY (Colmns name) (ASC/DESC)]

###############################
### Conditions

# Col_name (> , =>, <, <=, =) value
# Col_name (> , =>, <, <=, =) value (AND/OR) Col_name (> , =>, <, <=, =) value

#  Col_name LIKE value

#  Col_name IN (value, value, ...)

################################################################################################################
# Test Data
################################################################################################################

# n_words['between', 'not', 'do']
# stop_word

# City questions
# What are the names of the cities?
# ['What', 'name', 'city', '?']

# What is the population of each city?
# ['What', 'population', 'city' '?']


################################################################################################################

